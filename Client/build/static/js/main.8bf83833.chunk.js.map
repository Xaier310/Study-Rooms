{"version":3,"sources":["LoginButton.jsx","LogoutButton.jsx","Navbar.jsx","RealChat.jsx","images/1.jpg","Footer.jsx","Home.jsx","Loading.jsx","About.jsx","ProtectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","useAuth0","loginWithPopup","loginWithRedirect","className","onClick","LogOut","logout","Navbar","useContext","AppContext","prevRoomId","socket","setPrevRoomId","curUser","setCurRoomId","curRoomId","useState","useEffect","AOS","init","duration","refresh","isAuthenticated","user","history","isLoading","useHistory","emit","push","e","preventDefault","obj","roomId","nickname","username","email","type","on","isValid","setTimeout","alert","href","RealChat","allParticipants","setAllParticipants","isWD","isAD","isML","currMsg","setCurrMsg","msgList","setMsgList","LocalallParticipants","setLocalallParticipants","getCurrTime","date","Date","now","hours","getHours","minutes","getMinutes","ampm","users","tempArray","i","length","j","socketid","addMsg","a","inputMsg","document","getElementById","value","message","key","msg","time","ele","focus","console","log","indexOf","objDiv","querySelector","height","scrollHeight","scrollBy","onKeyDown","src","picture","alt","map","id","disabled","onChange","target","placeholder","Footer","name","class","Home","setIsRoomIdValid","isRoomIdValid","isLoggedIn","setIsLoggedIn","setIsWD","setIsAD","setIsML","inputRoomId","isNewRoom","setIsNewRoom","participantsInCR","setparticipantsInCR","setInputRoomId","noOfPartInCR","setNoOfPartInCR","isPopup","setIsPopup","getCustomStats","str","lengtharray","createRoom","RoomId","ans","arr","Math","floor","random","randomStr","alertfn","joinRoom","joinCustomRoom","number","roomid","alertFnForPopup","innerText","popupItems","event","secondImg","Loading","About","style","backggroundImage","paddingLeft","paddingRight","margin","ProtectedRoute","Component","component","rest","render","props","to","path","state","from","location","createContext","App","setCurUser","setSocket","WebRoom","webroom1","webroom2","webroom3","webroom4","webroom5","MlRoom","mlroom1","mlroom2","mlroom3","mlroom4","mlroom5","AndroidRoom","androidroom1","androidroom2","androidroom3","androidroom4","androidroom5","io","transports","Provider","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","domain","clientId","redirectUri","window","origin","StrictMode"],"mappings":"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","file":"static/js/main.8bf83833.chunk.js","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport default function LoginButton() {\n  const { loginWithRedirect, loginWithPopup } = useAuth0();\n\n  return <button className=\"navbar-button\" onClick={() => loginWithPopup()}>Create Account</button>;\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogOut = () => {\n  const { logout } = useAuth0();\n  return <button className=\"navbar-button\" onClick={() => logout()}>Sign Out</button>;\n};\n\nexport default LogOut;\n","import React, { Component, useContext, useEffect, useState } from \"react\";\nimport LoginButton from \"./LoginButton\";\nimport LogOut from \"./LogoutButton\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router-dom\";\nimport AOS from \"aos\";\nimport { AppContext } from \"./App\";\n\nfunction Navbar() {\n  const {\n    prevRoomId,\n    setPrevRoomId,\n    socket,\n    curUser,\n    setCurRoomId,\n    curRoomId,\n  } = useContext(AppContext);\n  const [isNavPopup, setIsNavPopup] = useState(false);\n  useEffect(() => {\n    AOS.init({ duration: 1300 });\n    AOS.refresh();\n  }, []);\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  let history = useHistory();\n\n  const prevChatRoom = (e) => {\n    e.preventDefault();\n    if (curUser && prevRoomId !== \"\") {\n      var obj = {\n        roomId: prevRoomId,\n        nickname: curUser.nickname,\n        username: curUser.email,\n        type: \"oldRoom\",\n      };\n      socket.emit(\"join_room\", obj);\n      socket.on(\"isJoined\", (isValid) => {\n        if (isValid) {\n          setCurRoomId(prevRoomId);\n          socket.emit(\"addUser\", curUser);\n          history.push(\"/chat-room\");\n        } else {\n          setTimeout(() => {\n            alert(\"Previous room has been removed\");\n          }, 1500);\n        }\n      });\n    } else {\n      setTimeout(() => {\n        alert(\"No previous record found\");\n      }, 1500);\n    }\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar-child-1\">\n        <div className=\"navbar-logo\">\n          <span className=\"navbar-logo-dot\"></span>\n          <h4\n            onClick={() => {\n              socket.emit(\"remove_me\", curRoomId);\n              history.push(\"/home\");\n            }}\n            className=\"navbar-logo-text\"\n            data-aos=\"fade-zoom-in\"\n          >\n            StudyRooms\n          </h4>\n        </div>\n        <ul className=\"navbar-items\">\n          <li className=\"navbar-item-1 navbar-item-cc\">\n            <a\n              onClick={() => {\n                socket.emit(\"remove_me\", curRoomId);\n                history.push(\"/home\");\n              }}\n            >\n              Home\n            </a>\n          </li>\n          <li className=\"navbar-item-2 navbar-item-cc\">\n            <a onClick={prevChatRoom}>lastRoom</a>\n          </li>\n          <li className=\"navbar-item-3 navbar-item-cc\">\n            <a\n              onClick={() => {\n                socket.emit(\"remove_me\", curRoomId);\n                history.push(\"/about_us\");\n              }}\n            >\n              About Us\n            </a>\n          </li>\n          <li className=\"navbar-item-4 navbar-item-cc\">\n            <a href=\"#contact-us-form\">Contact us</a>\n          </li>\n        </ul>\n      </div>\n      <div className=\"navbar-child-2\">\n        {!isAuthenticated ? <LoginButton /> : <LogOut />}\n      </div>\n    </div>\n  );\n  {\n    /* <button className=\"navbar-button\">Create Account</button> */\n  }\n}\n\nexport default Navbar;\n","import React, { Component, useContext, useEffect, useState } from \"react\";\n// import \"./css/Home.css\";\nimport Navbar from \"./Navbar\";\nimport AOS from \"aos\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { AppContext } from \"./App\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction RealChat() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const {\n    socket,\n    curUser,\n    curRoomId,\n    allParticipants,\n    setAllParticipants,\n    isWD,\n    isAD,\n    isML,\n  } = useContext(AppContext);\n\n  const [currMsg, setCurrMsg] = useState(\"\");\n  const [msgList, setMsgList] = useState([]);\n  var [LocalallParticipants, setLocalallParticipants] = useState([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    AOS.init({ duration: 1300 });\n    AOS.refresh();\n  }, []);\n\n  useEffect(() => {\n    socket.emit(\"giveUsers\", curRoomId);\n    socket.on(\"getUsers\", (obj) => {\n      setAllParticipants(obj);\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket.emit(\"give_roomUsers\", curRoomId);\n    socket.on(\"get_roomUsers\", (users) => {\n      var tempArray = [];\n      // console.log(\"users : \",users.length);\n      // console.log(\"participants: \",allParticipants.length);\n      for (let i = 0; i < users.length; i++) {\n        for (let j = 0; j < allParticipants.length; j++) {\n          if (allParticipants[j].socketid === users[i]) {\n            tempArray.push(allParticipants[j].user);\n          }\n        }\n      }\n\n      //   console.log(\"tempArray : \",tempArray,\" allParticuipants : \",allParticipants,\" users : \",users);\n      setLocalallParticipants(tempArray);\n    });\n  }, [allParticipants]);\n\n  useEffect(() => {}, [LocalallParticipants]);\n\n  function getCurrTime() {\n    let date = new Date(Date.now());\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  }\n\n  const addMsg = async (e) => {\n    e.preventDefault();\n    var inputMsg = \"\";\n    if (document.getElementById(\"inputMsg\"))\n      inputMsg = document.getElementById(\"inputMsg\").value;\n    if (user && inputMsg !== \"\") {\n      let message = {\n        key: msgList.length + 1,\n        msg: inputMsg,\n        roomId: curRoomId,\n        time: getCurrTime(),\n        nickname: user.nickname,\n        username: user.email,\n      };\n      await socket.emit(\"send_message\", message);\n      setCurrMsg(\"\");\n      let ele = document.getElementById(\"inputMsg\");\n      if (ele) ele.focus();\n    } else {\n      console.log(\"Warning! Something went wrong \");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      await socket.on(\"receive_message\", (message) => {\n        if (!msgList.indexOf(message) > -1) {\n          setMsgList((msg) => [...msg, message]);\n          var objDiv = document.querySelector(\".main-part-right-dm-p\");\n          var height = objDiv.scrollHeight;\n          //   var objDiv = document.querySelector(\".main-part-right\").parentElement;\n          //   objDiv.scrollTop = objDiv.scrollHeight;\n          objDiv.scrollBy(0, height);\n        } else {\n          console.log(\"message already added\");\n        }\n      });\n    })();\n  }, [socket]);\n\n  // const loadFile = (e) => {\n  //     var image = document.getElementById(\"output\");\n  //     var tgt = e.target || window.event.srcElement,\n  //       files = tgt.files;\n  //     if (FileReader && files && files.length) {\n  //       var fr = new FileReader();\n  //       fr.onload = async function () {\n  //         // document.getElementById(\"output\").src = fr.result;\n  //         var img =  <img src={fr.result} className=\"loadedImg main-part-right-dm-msg-text\" alt=\"img\" />\n  //         let message={\n  //             key: msgList.length+1,\n  //             msg:img,\n  //             roomId: curRoomId,\n  //             time: getCurrTime(),\n  //             nickname: user.nickname,\n  //             username: user.email\n  //             }\n  //         // setMsgList([...msgList,message]);\n  //         // socket.emit(\"send_message\",message);\n  //         // console.log(\"msg : \",message);\n  //       };\n  //       fr.readAsDataURL(files[0]);\n  //     }\n  // }\n\n  return (\n    <>\n      <div\n        className=\"Chat\"\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            addMsg(e);\n          }\n        }}\n      >\n        <div className=\"chat-navbar\">\n          <Navbar />\n        </div>\n        <h1 className=\"roomid\">ROOM ID : {curRoomId}</h1>\n        <main className=\"main\">\n          <section className=\"main-part-left\">\n            <div className=\"main-part-left-profile\">\n              <div className=\"main-part-left-profile-img\">\n                <img src={user.picture} alt=\"\" />\n              </div>\n              <h4 className=\"main-part-left-profile-name\">{user.nickname}</h4>\n              <span className=\"main-part-left-profile-name-setting\">\n                <a\n                  onClick={() => {\n                    history.push(\"/home\");\n                    socket.emit(\"remove_me\", curRoomId);\n                  }}\n                >\n                  <i className=\"fas fa-sign-out-alt\"></i>\n                </a>\n              </span>\n            </div>\n            <div className=\"main-part-left-participants\">\n              {LocalallParticipants.map(\n                (user) =>\n                  user.email !== curUser.email && (\n                    <div className=\"main-part-left-participants-participant-cc\">\n                      <img\n                        className=\"main-part-left-participants-participant-cc-img\"\n                        src={user.picture}\n                        alt=\"\"\n                      />\n                      <h4 className=\"main-part-left-participants-participant-cc-name\">\n                        {user.nickname}\n                      </h4>\n                    </div>\n                  )\n              )}\n            </div>\n          </section>\n          <section className=\"main-part-right\">\n            <div className=\"main-part-right-dm-p\">\n              {msgList.map((msg) =>\n                curUser.email === msg.username ? (\n                  <div className=\"main-part-right-dm\">\n                    <div className=\"main-part-right-dm-msg myMsg\" id=\"myMsg\">\n                      <p className=\"main-part-right-dm-msg-name\">\n                        {msg.nickname}\n                      </p>\n                      <p className=\"main-part-right-dm-msg-text\">{msg.msg}</p>\n                      <span className=\"main-part-right-dm-msg-time\">\n                        {msg.time}\n                      </span>\n                    </div>\n                    <span></span>\n                  </div>\n                ) : (\n                  <div className=\"main-part-right-dm\">\n                    <div className=\"main-part-right-dm-msg myMsg\">\n                      <p className=\"main-part-right-dm-msg-name\">\n                        {msg.nickname}\n                      </p>\n                      <p className=\"main-part-right-dm-msg-text\">{msg.msg}</p>\n                      <span className=\"main-part-right-dm-msg-time\">\n                        {msg.time}\n                      </span>\n                    </div>\n                    <span></span>\n                  </div>\n                )\n              )}\n            </div>\n            <div className=\"main-part-right-msgbox\">\n              <span className=\"main-part-right-msgbox-file\">\n                <input type=\"file\" disabled />\n              </span>\n              <input\n                id=\"inputMsg\"\n                value={currMsg}\n                onChange={(e) => {\n                  setCurrMsg(e.target.value);\n                }}\n                type=\"text\"\n                placeholder=\"Type a message\"\n                className=\"main-part-right-msgbox-typemsg\"\n              />\n              <span className=\"main-part-right-msgbox-sendbutton\">\n                <i onClick={addMsg} className=\"fas fa-paper-plane\"></i>\n              </span>\n            </div>\n          </section>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default RealChat;\n","export default __webpack_public_path__ + \"static/media/1.e3ce2565.jpg\";","import React from \"react\";\nimport \"./Footer.css\";\nexport default function Footer() {\n  return (\n    <div className=\"footer-wrapper\">\n      <div className=\"r1\">\n        <div className=\"links\">\n          <h1> Important Links</h1>\n          <ul>\n            <li>wgnkegnwlkg</li>\n            <li>wgnkegnwlkg</li>\n            <li>wgnkegnwlkg</li>\n            <li>wgnkegnwlkg</li>\n          </ul>\n        </div>\n        <div id=\"contact-us-form\" className=\"contactus-footer\">\n          <h1>Contact US</h1>\n\n          <h3>Have any queries feel free to reach out</h3>\n          <form className=\"signup\">\n            <br />\n\n            <input\n              name=\"Name\"\n              type=\"text\"\n              placeholder=\"Name*\"\n              class=\"username\"\n              id=\"input\"\n            />\n            <textarea id=\"input\" type=\"text\" placeholder=\"Message\" />\n\n            <button class=\"btn\">Send Message</button>\n          </form>\n        </div>\n      </div>\n      <div className=\"r2\">\n        <div>\n          <p>Copyright @2021</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\n// import \"./css/Home.css\";\nimport firstImg from \"./images/1.jpg\";\nimport secondImg from \"./images/1.jpg\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { AppContext } from \"./App\";\nconst Home = () => {\n  const {\n    socket,\n    curUser,\n    isRoomIdValid,\n    setIsRoomIdValid,\n    isLoggedIn,\n    setIsLoggedIn,\n    isWD,\n    setIsWD,\n    isAD,\n    setIsAD,\n    isML,\n    setIsML,\n    curRoomId,\n    setCurRoomId,\n    isNewRoom,\n    setIsNewRoom,\n    allParticipants,\n    setAllParticipants,\n    participantsInCR,\n    setparticipantsInCR,\n    inputRoomId,\n    setInputRoomId,\n    prevRoomId,\n    setPrevRoomId,\n  } = useContext(AppContext);\n  const [noOfPartInCR, setNoOfPartInCR] = useState([0, 0, 0, 0, 0]);\n  const [isPopup, setIsPopup] = useState(false);\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  var history = useHistory();\n  let capacity = 15;\n\n  function randomStr() {\n    var ans = \"\";\n    const arr =\n      \"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (var i = 6; i > 0; i--) {\n      ans += arr[Math.floor(Math.random() * arr.length)];\n    }\n    return ans;\n  }\n\n  const getCustomStats = async (str) => {\n    await socket.emit(\"custom_stats\", str);\n    socket.on(\"your_custom_stats\", (lengtharray) => {\n      setNoOfPartInCR(lengtharray);\n    });\n  };\n\n  const createRoom = (e) => {\n    e.preventDefault();\n    var RoomId = randomStr();\n    setCurRoomId(RoomId);\n    if (curUser) {\n      var obj = {\n        roomId: RoomId,\n        nickname: curUser.nickname,\n        username: curUser.email,\n        type: \"newRoom\",\n      };\n      socket.emit(\"join_room\", obj);\n      setPrevRoomId(RoomId);\n      socket.emit(\"addUser\", curUser);\n      history.push(\"/chat-room\");\n    } else {\n      alertfn();\n    }\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    if (inputRoomId !== \"\") {\n      var obj = {\n        roomId: inputRoomId,\n        nickname: curUser.nickname,\n        username: curUser.email,\n        type: \"oldRoom\",\n      };\n      socket.emit(\"join_room\", obj);\n      socket.on(\"isJoined\", (isValid) => {\n        if (isValid) {\n          setCurRoomId(inputRoomId);\n          setPrevRoomId(inputRoomId);\n          socket.emit(\"addUser\", curUser);\n          history.push(\"/chat-room\");\n        } else {\n          setIsRoomIdValid(false);\n          alertfn(null, \"Invalid Room Id\");\n        }\n      });\n    } else {\n      alertfn(null, \"Invalid Room Id\");\n    }\n  };\n\n  const joinCustomRoom = (number) => {\n    if (noOfPartInCR[number - 1] < capacity) {\n      var roomid = \"\";\n      if (isWD) roomid = `webroom${number}`;\n      else if (isAD) roomid = `androidroom${number}`;\n      else if (isML) roomid = `mlroom${number}`;\n      setCurRoomId(roomid);\n      setPrevRoomId(roomid);\n      socket.emit(\"join_custom_room\", roomid);\n      socket.emit(\"addUser\", curUser);\n      history.push(\"/chat-room\");\n    } else {\n      alertFnForPopup(\"This Room is already full try another one\");\n    }\n  };\n\n  useEffect(() => {\n    AOS.init({ duration: 1300 });\n    AOS.refresh();\n  }, []);\n\n  const alertfn = (e = null, str = \"Please login first\") => {\n    var ele = document.querySelector(\".alert\");\n    if (ele) ele.innerText = str;\n    setTimeout(() => {\n      ele.innerText = \"\";\n    }, 2000);\n  };\n  const alertFnForPopup = (str = \"Please login first\") => {\n    var ele = document.querySelector(\".alertForPopup\");\n    if (ele) ele.innerText = str;\n    setTimeout(() => {\n      ele.innerText = \"\";\n    }, 2000);\n  };\n\n  const popupItems = [];\n  for (let i = 0; i < 5; i++) {\n    if (isML)\n      popupItems.push(\n        isAuthenticated ? (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              joinCustomRoom(i + 1);\n              noOfPartInCR[i] <= capacity && setIsML(false);\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        ) : (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              alertFnForPopup();\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        )\n      );\n    // participantsInCR.MlRoom[`mlroom${i+1}`]\n    else if (isWD)\n      popupItems.push(\n        isAuthenticated ? (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              joinCustomRoom(i + 1);\n              noOfPartInCR[i] <= capacity && setIsWD(false);\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        ) : (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              alertFnForPopup();\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        )\n      );\n    // participantsInCR.WebRoom[`webroom${i+1}`]\n    else if (isAD)\n      popupItems.push(\n        isAuthenticated ? (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              joinCustomRoom(i + 1);\n              noOfPartInCR[i] <= capacity && setIsAD(false);\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        ) : (\n          <a\n            className=\"no-of-rooms-row-room-cc\"\n            onClick={() => {\n              alertFnForPopup();\n            }}\n          >\n            {noOfPartInCR[i]}\n          </a>\n        )\n      );\n    // participantsInCR.AndroidRoom[`androidroom${i+1}`]\n  }\n\n  return (\n    <>\n      <div className=\"Home\">\n        <Navbar />\n        <main className=\"main\">\n          <section className=\"main-part-1\">\n            <div className=\"main-part-1-left\">\n              <h1 className=\"main-part-1-left-heading\">\n                You will never study alone again.\n              </h1>\n              <p className=\"main-part-1-left-para\">\n                Join the largest global student community online and say goodbye\n                to lack of motivation. Create your own Room and share room-Id\n                with others or join a already created room.\n                <br />\n                <br />\n                Joining a virtual study room is just like attending a Video\n                Call, where instead of talking all the participants on the call\n                are studying and motivating each other to do the same.\n              </p>\n              <div className=\"main-part-1-left-buttons\">\n                <button\n                  className=\"main-part-1-left-buttons-button-1 main-part-1-left-buttons-button-cc\"\n                  onClick={isAuthenticated ? createRoom : alertfn}\n                >\n                  Create Room\n                </button>\n\n                <button\n                  className=\"main-part-1-left-buttons-button-2 main-part-1-left-buttons-button-cc\"\n                  onClick={() => setIsPopup(true)}\n                >\n                  <i className=\"fas fa-home\"></i>Enter in a Room\n                </button>\n\n                {isPopup && (\n                  <div\n                    className=\"popup-roomid-input\"\n                    onKeyDown={(e) => {\n                      if (e.key === \"Enter\") {\n                        isAuthenticated ? joinRoom(e) : alertfn();\n                      }\n                    }}\n                  >\n                    <div className=\"popup-roomid-input-bg\">\n                      <h1>Enter Room ID</h1>\n                      <div className=\"popup-roomid-input-bg-extra\">\n                        <input\n                          placeholder=\"Enter room id . . .\"\n                          type=\"text\"\n                          onChange={(event) => {\n                            setInputRoomId(event.target.value);\n                          }}\n                        />\n                        <button\n                          id=\"link\"\n                          onClick={isAuthenticated ? joinRoom : alertfn}\n                        >\n                          <i className=\"fas fa-arrow-right\"></i>\n                        </button>\n                      </div>\n\n                      <div\n                        onClick={() => setIsPopup(false)}\n                        className=\"no-of-rooms-row-closeButton\"\n                      >\n                        <i className=\"fas fa-times\"></i>\n                      </div>\n                      <p className=\"alert\"></p>\n                    </div>\n                  </div>\n                )}\n\n                <p className=\"alert\"></p>\n              </div>\n            </div>\n            <div className=\"main-part-1-right\">\n              {/* <img className=\"main-part-1-right-image\" src={firstImg} alt=\"\" /> */}\n            </div>\n          </section>\n          <section className=\"main-part-2\">\n            <div className=\"main-part-2-left\">\n              <img className=\"main-part-2-left-img\" src={secondImg} alt=\"\" />\n            </div>\n            <div className=\"main-part-2-right\" id=\"rooms\">\n              {(isML || isWD || isAD) && (\n                <div className=\"no-of-rooms\">\n                  <div className=\"no-of-rooms-row\">\n                    {popupItems}\n                    <span\n                      onClick={isAuthenticated ? createRoom : alertFnForPopup}\n                      className=\"no-of-rooms-row-room-cc\"\n                    >\n                      <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                    </span>\n                    <div className=\"no-of-rooms-row-closeButton\">\n                      <i\n                        className=\"fas fa-times\"\n                        onClick={() => {\n                          setIsML(false);\n                          setIsWD(false);\n                          setIsAD(false);\n                        }}\n                      ></i>\n                    </div>\n                    <br />\n                    <p className=\"alertForPopup\"></p>\n                  </div>\n                </div>\n              )}\n              <h1 className=\"main-part-2-right-heading\">\n                Want to have focus on special topics ??\n              </h1>\n              <p className=\"main-part-2-right-para\">\n                Don't worry. We have pre-built rooms for different topics - Web\n                development, App development, Machine Learning. Choose different\n                rooms on the basis of how many participants are active. All\n                rooms are limited to 15 participants to increase interaction\n              </p>\n              <div className=\"main-part-2-right-cards\">\n                <div className=\"main-part-2-right-cards-card-1 main-part-2-right-cards-card-cc\">\n                  <h1 className=\"main-part-2-right-cards-card-cc-heading-cc\">\n                    <i className=\"fab fa-js-square\"></i>\n                    <span>Web Development</span>\n                  </h1>\n                  <button\n                    className=\"main-part-2-right-cards-card-cc-button-cc\"\n                    onClick={() => {\n                      setIsWD(true);\n                      getCustomStats(\"webroom\");\n                    }}\n                  >\n                    Join Room\n                  </button>\n                </div>\n                <div className=\"main-part-2-right-cards-card-2 main-part-2-right-cards-card-cc\">\n                  <h1 className=\"main-part-2-right-cards-card-cc-heading-cc\">\n                    <i className=\"fab fa-apple\"></i>\n                    <span>App Development</span>\n                  </h1>\n                  <button\n                    className=\"main-part-2-right-cards-card-cc-button-cc\"\n                    onClick={() => {\n                      setIsAD(true);\n                      getCustomStats(\"androidroom\");\n                    }}\n                  >\n                    Join Room\n                  </button>\n                </div>\n                <div className=\"main-part-2-right-cards-card-3 main-part-2-right-cards-card-cc\">\n                  <h1 className=\"main-part-2-right-cards-card-cc-heading-cc\">\n                    <i className=\"fab fa-python\"></i>\n                    <span>Machine Learning</span>\n                  </h1>\n                  <button\n                    className=\"main-part-2-right-cards-card-cc-button-cc\"\n                    onClick={() => {\n                      setIsML(true);\n                      getCustomStats(\"mlroom\");\n                    }}\n                  >\n                    Join Room\n                  </button>\n                </div>\n                {/* <div className=\"main-part-2-right-cards-card-4 main-part-2-right-cards-card-cc\">\n        <h1 className=\"main-part-2-right-cards-card-cc-heading-cc\">Random</h1>\n        <button className=\"main-part-2-right-cards-card-cc-button-cc\">Join Room</button>\n        </div>     */}\n              </div>\n            </div>\n          </section>\n        </main>\n        <footer className=\"footer\"></footer>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport \"./css/Loading.css\";\n\n\nconst Loading = ()=>{\n    return(\n\n<div class=\"load-wrapp\">\n    <div class=\"load-3\">\n      <div class=\"line\"></div>\n      <div class=\"line\"></div>\n      <div class=\"line\"></div>\n    </div>\n  </div>\n    );\n\n}\nexport default Loading;","import React from \"react\";\nimport Footer from \"./Footer\";\nimport Navbar from \"./Navbar\";\nimport \"./css/Home.css\";\nexport default function About() {\n  return (\n    <div\n      className=\"Home\"\n      style={{\n        backggroundImage: \"none\",\n        paddingLeft: \"0.5em\",\n        paddingRight: \"0.5em\",\n        margin: \"0.5em\",\n      }}\n    >\n      <Navbar />\n      <h1 className=\"about-heading\">About Us</h1>\n      <p className=\"about-para\">\n        Developed by Pradeep and Amit, students of Delhi Technological\n        University, Study Rooms aims at bringing various people of similar\n        interests together to form a global community.\n      </p>\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ curRoomId, isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated && curRoomId!==\"\") return <Component {...props} />;\n        if (!isAuthenticated)\n          return (\n            <Redirect to={{ path: \"/\", state: { from: props.location } }} />\n          );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;","import { createContext, useEffect, useState } from \"react\";\n// import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport RealChat from \"./RealChat\";\nimport \"./css/Home.css\";\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport io from \"socket.io-client\";\n// import Chat from \"./Chat\";\nimport axios from \"axios\";\nimport LoginButton from \"./LoginButton\";\nimport LogOut from \"./LogoutButton\";\nimport Loading from \"./Loading\";\nimport About from \"./About\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nexport const AppContext = createContext(null);\n\n// const socket = io(\"http://localhost:3001\");\nfunction randomStr() {\n  var ans = \"\";\n  const arr = \"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  for (var i = 6; i > 0; i--) {\n    ans += arr[Math.floor(Math.random() * arr.length)];\n  }\n  return ans;\n}\n\nvar Rooms = {\n  WebRoom: [\"webroom1\", \"webroom2\", \"webroom3\", \"webroom4\", \"webroom4\"],\n  MlRoom: [\"mlroom1\", \"mlroom2\", \"mlroom3\", \"mlroom4\", \"mlroom5\"],\n  AndroidRoom: [\n    \"androidroom1\",\n    \"androidroom2\",\n    \"androidroom3\",\n    \"androidroom4\",\n    \"androidroom5\",\n  ],\n};\n\nfunction App() {\n  const [curUser, setCurUser] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const [isRoomIdValid, setIsRoomIdValid] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isWD, setIsWD] = useState(false);\n  const [isAD, setIsAD] = useState(false);\n  const [isNewRoom, setIsNewRoom] = useState(false);\n  const [isML, setIsML] = useState(false);\n  const [curRoomId, setCurRoomId] = useState(null);\n  const [allParticipants, setAllParticipants] = useState([]);\n  const [inputRoomId, setInputRoomId] = useState(\"\");\n  const [prevRoomId, setPrevRoomId] = useState(\"\");\n  const [participantsInCR, setparticipantsInCR] = useState({\n    WebRoom: {\n      webroom1: 1,\n      webroom2: 0,\n      webroom3: 0,\n      webroom4: 2,\n      webroom5: 0,\n    },\n    MlRoom: { mlroom1: 6, mlroom2: 9, mlroom3: 0, mlroom4: 0, mlroom5: 0 },\n    AndroidRoom: {\n      androidroom1: 0,\n      androidroom2: 9,\n      androidroom3: 0,\n      androidroom4: 0,\n      androidroom5: 0,\n    },\n  });\n\n  useEffect(() => {\n    user && setCurUser(user);\n    // console.log(user);\n  }, [user]);\n  // const PORT = process.env.PORT || 3001;\n  useEffect(() => {\n    // setSocket(io(`http://localhost:3001`));\n    setSocket(\n      io(\"https://react-studyroom.herokuapp.com/\", {\n        transports: [\"websocket\"],\n      })\n    );\n  }, []);\n\n  return (\n    <AppContext.Provider\n      value={{\n        socket,\n        curUser,\n        isRoomIdValid,\n        setIsRoomIdValid,\n        isLoggedIn,\n        setIsLoggedIn,\n        isWD,\n        setIsWD,\n        isAD,\n        setIsAD,\n        isML,\n        setIsML,\n        curRoomId,\n        setCurRoomId,\n        isNewRoom,\n        setIsNewRoom,\n        allParticipants,\n        setAllParticipants,\n        participantsInCR,\n        setparticipantsInCR,\n        inputRoomId,\n        setInputRoomId,\n        prevRoomId,\n        setPrevRoomId,\n      }}\n    >\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route path=\"/home\" component={isLoading ? Loading : Home} />\n          <Route path=\"/about_us\" component={isLoading ? Loading : About} />\n          <ProtectedRoute\n            path=\"/chat-room\"\n            component={RealChat}\n            isAuthenticated={isAuthenticated}\n            curRoomId={curRoomId}\n          />\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-ckl80phv.us.auth0.com\"\n    clientId=\"2ZNEOsJgmbkIhZsQMzq9MeW1aNlB80sX\"\n    redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}